#!/usr/bin/env ruby

libdir = File.expand_path('../lib', __dir__)
$LOAD_PATH.unshift(libdir) unless $LOAD_PATH.include?(libdir)

require 'json'
require 'puma'
require 'sinatra'
require 'grese/webhook_server'

server = Grese::WebhookServer.new({
  url: ENV['ZENDESK_URL'],
  user: ENV['ZENDESK_USER'],
  token: ENV['ZENDESK_TOKEN']
}, development?)

def authenticate!(token)
  if token != ENV['AUTH_TOKEN'] # rubocop:disable Style/GuardClause
    status 401
    halt "Access denied\n"
  end
end

def invalid_request
  status 400
end

before '/zendesk/:token' do
  authenticate!(params['token'])
end
before '/:token' do
  authenticate!(params['token'])
end

post '/:token' do
  params = JSON.parse request.body.read
  if (remote_url = params['url'])
    server.check_logs(remote_url).to_json
  else
    # Invalid request no remote_url param
    invalid_request
  end
end

get '/zendesk/:token' do
  if (info = params['info'])
    ticket_info = JSON.parse(info)
    attachments = ticket_info['attachments'].split('|')

    attachments.each do |attachment|
      filename = attachment.split('=').last

      results = server.check_logs(attachment)
      server.update_zendesk(ticket_info['ticket_id'].to_i, filename, results)
      puts results.to_json

      status 204
    end
  else
    # Invalid request no info param
    invalid_request
  end
end

get '/' do
  'Hello, World!'
end
